<!DOCTYPE html>
<html>
<head lang="ru">
    <base href="/">
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1 maximum-scale=1 user-scalable=no">
    <link rel="stylesheet" href="{{ asset('style/common.css') }}">
</head>
<body>
<div class="description"></div>
<div class="form">
    <input type="text" id="link" placeholder="https://vk.com/topic-12469956_33400152" onkeydown="onChange(this)">
    <div class="error-msg">Вставтье ссылку на обсуждение</div>
    <input type="text" id="needle" placeholder="Политехничская, Академическая" onkeydown="onChange(this)">
    <div class="error-msg">Перечислите через запятую слова для поиска</div>
    <input type="text" id="email" placeholder="mrsuh@gmail.com" onkeydown="onChange(this)">
    <div class="error-msg">Поле должно содержать валидный email</div>
    <button type="button" onclick="notify()">Подписаться</button>
</div>
</body>
<script>
    var onChange = function (element) {
        element.className = '';
    };

    var notify = function () {
        var fields = ['email', 'needle', 'link'];
        var data = {};
        var validation = true;
        for (var index in fields) {
            if (fields.hasOwnProperty(index)) {
                var field = fields[index];
                var item = document.getElementById(field);
                var item_value = item.value;

                var regexp = true;
                switch (field) {
                    case 'email':
                        regexp = item_value.match(/^[-a-z0-9~!$%^&*_=+}{\'?]+(\.[-a-z0-9~!$%^&*_=+}{\'?]+)*@([a-z0-9_][-a-z0-9_]*(\.[-a-z0-9_]+)*\.(aero|arpa|biz|com|coop|edu|gov|info|int|mil|museum|name|net|org|pro|travel|mobi|[a-z][a-z])|([0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}\.[0-9]{1,3}))(:[0-9]{1,5})?$/i);
                        break;
                    case 'link':
                        regexp = item_value.match(/topic-[0-9]+_[0-9]+/);
                        break;
                }

                if (!regexp || 'undefined' === typeof item_value || '' === item_value) {
                    item.className = 'error';
                    validation = false;
                } else {
                    item.className = '';
                }

                data[field] = item.value;
            }
        }

        if (validation) {
            ajax(data, function (data) {
                console.info(JSON.parse(data));
            });
        }
    };

    var ajax = function (data, callback) {
        var xhr = new XMLHttpRequest();

        var body = 'email=' + encodeURIComponent(data['email']) +
                '&link=' + encodeURIComponent(data['link']) +
                '&needle=' + encodeURIComponent(data['needle']);

        xhr.onreadystatechange = function () {
            if (xhr.readyState == 4 && xhr.status == 200) callback(xhr.responseText);
        };

        xhr.open("POST", '{{ path('notify') }}', true);
        xhr.setRequestHeader('Content-Type', 'application/x-www-form-urlencoded');


        xhr.send(body);
    };
</script>
</html>